# This is a basic workflow that is manually triggered
name: Build OpenBSD Qcow2

# Runs the action when it is triggered manually
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'OpenBSD release'
        default: '7.5'
        required: true
        type: string

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Check out the repository to the runner
          uses: actions/checkout@v4
        - name: Install dependencies
          run: sudo apt update ; sudo apt install -y signify-openbsd signify-openbsd-keys qemu-system
        - name: build !
          run: |
            ./build_openbsd_qcow2.sh -r ${{github.event.inputs.release}} --image-file openbsd.qcow2 -b
        - uses: actions/upload-artifact@v4
          with:
              name: openbsd.qcow2
              path: images/openbsd.qcow2

    test:
        needs: build
        runs-on: ubuntu-latest
        steps:
        - uses: actions/download-artifact@v4
          with:
            name: openbsd.qcow2
            path: images
        - name: Install dependencies
          run: sudo apt update ; sudo apt install -y qemu-system netcat-openbsd
        - name: Boot the system image
          run: |
              set -x
              qemu-system-x86_64 -smp cpus=1 -m 384m -drive file="images/openbsd.qcow2",media=disk,if=virtio \
                 -device virtio-net-pci,netdev=n1 -nographic -netdev user,id=n1,hostfwd=tcp::2222-:22 &
        - name: Wait for the VM to boot
          run: |
            while [[ ! $(timeout 1 nc localhost 2222) ]] ; do
                sleep 1 ; try=$((try + 1))
                if [[ "$try" -gt 300 ]] ; then
                    echo "== System image boot failed :(  =="
                    exit 1
                fi
                echo "== Connection attempt ${try} =="
            done
            echo "== System image is bootable ! :) =="

    release:
        needs: test
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
        - name: Check out the repository to the runner
          uses: actions/checkout@v4
        - name: Generate tag name
          run: echo "tag=v${{ github.event.inputs.release }}_$(date +'%Y-%m-%d-%H-%M')" >> "$GITHUB_ENV"
        - uses: actions/download-artifact@v4
          with:
            name: openbsd.qcow2
            path: .
        - name: Create a new release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            gh release create "${tag}" \
                --repo="$GITHUB_REPOSITORY" \
                --title="OpenBSD Cloud Image ${tag}" \
                --generate-notes
        - name: Upload the Qcow2 image
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            gh release upload "${tag}" openbsd.qcow2
